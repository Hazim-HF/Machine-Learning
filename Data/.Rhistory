1+2
install.packages('tuneR')
install.packages('seewave')
library(seewave)
library(tuneR)
library(seewave)
help(wave)
# import library
library(tuneR)
library(seewave)
# sampling rate
sr = 8000
# time in sec if sample for 2 sec at 8KHz
t = seq(0,2,1/sr)
# sine wave a 440Hz scaled to fill out 16 bit range
y = (2^15-1)*sin(2*pi*440*t)
# import library
library(tuneR)
library(seewave)
# sampling rate
sr = 8000
# time in sec if sample for 2 sec at 8KHz
t = seq(0,2,1/sr)
# sine wave a 440Hz scaled to fill out 16 bit range
y = (2^15-1)*sin(2*pi*440*t)
# plot
plot(y, type = 'l')
# import library
library(tuneR)
library(seewave)
# sampling rate
sr = 8000
# time in sec if sample for 2 sec at 8KHz
t = seq(0,2,1/sr)
# sine wave a 440Hz scaled to fill out 16 bit range
y = (2^15-1)*sin(2*pi*440*t)
# plot
plot(y, type = '1')
# import library
library(tuneR)
library(seewave)
# sampling rate
sr = 8000
# time in sec if sample for 2 sec at 8KHz
t = seq(0,2,1/sr)
# sine wave a 440Hz scaled to fill out 16 bit range
y = (2^15-1)*sin(2*pi*440*t)
# plot
plot(y, type = 'l')
# import library
library(tuneR)
library(seewave)
# sampling rate
sr = 8000
# time in sec if sample for 2 sec at 8KHz
t = seq(0,2,1/sr)
# sine wave a 440Hz scaled to fill out 16 bit range
y = (2^15-1)*sin(2*pi*440*t)
# plot
plot(y, type = 'l') # cannot see wave
plot(y[1:500], type = 'l')
# convert to sound
w = wave(y, samp.rate = sr, bit = 16)
# convert to sound
w = wave(y, samp.rate = sr, bit = 16)
library(seewave)
library(tuneR)
help(seewave)
ls(package='seewave')
ls('package:seewave')
dice = expand_grid({'die1': [1, 2, 3, 4, 5, 6],
dice = expand_grid('die1'= [1, 2, 3, 4, 5, 6],
dice = expand_grid('die1'= c(1, 2, 3, 4, 5, 6),
'die2'= c(1, 2, 3, 4, 5, 6),
'die3'= c(1, 2, 3, 4, 5, 6),
'die4'= c(1, 2, 3, 4, 5, 6)
)
eg6 <- readLines("https://en.wikipedia.org/wiki/Data_science")
eg6
head(eg6)
# read text lines from a file into character vector, each element represents a line of text
eg6 <- readLines("https://en.wikipedia.org/wiki/Data_science")
head(eg6)
# read text lines from a file into character vector, each element represents a line of text
eg6 <- readLines("https://en.wikipedia.org/wiki/Data_science")
head(eg6)
```{r}
library(XML)
install.packages('XML')
library(XML)
library(XML)
doc = htmlParse(eg6)
doc
eg7 = GET("https://www.edureka.co/blog/what-is-data-science/")
library(httr)
eg7 = GET("https://www.edureka.co/blog/what-is-data-science/")
View(eg7)
View(eg7)
View(eg7)
getwd()
setwd('D:/machine-learning')
getwd()
setwd('D:/machine-learning/data')
boston = read_csv('boston.csv')
boston = read.csv('boston.csv')
model = lm('medv ~ .', data = boston)
summary(model)
